a:11:{s:4:"name";s:7:"smd_bio";s:6:"status";s:1:"1";s:6:"author";s:11:"Stef Dawson";s:10:"author_uri";s:22:"http://stefdawson.com/";s:7:"version";s:4:"0.31";s:11:"description";s:44:"Customisable user biographies / profile info";s:4:"help";s:18892:"<div id="smd_help">

	<h1>smd_bio</h1>

	<p>Configure additional user biographical information to be collected when authors are created, then show that info as bylines against your articles. A bit like custom fields for user info.</p>

	<h2>Features</h2>

	<ul>
		<li>Define only the info you require to be collected about your authors &#8212; totally customisable</li>
		<li>Info is collected/edited on the Admin-&gt;Users tab beneath the existing user info</li>
		<li>Choose from a variety of types of content: text, radio buttons, select lists, checkboxes, images&#8230;</li>
		<li>Output any pieces of the biographical info in your article flow using a single, flexible tag</li>
		<li>Image thumbnail preview/selection on the Admin-&gt;Users tab</li>
		<li>Optional <span class="caps">CSS</span> to modify the layout of the Admin-&gt;Users tab</li>
	</ul>

	<h2>Author / Credits</h2>

	<p><a href="http://stefdawson.com/contact">Stef Dawson</a>. The plugin is a logical extension of pvc_users_info by Peter V. Cook (the smd_bio_articles tag is essentially the same as pvc_author_articles). Thanks also to pieman for setting the wheels in motion and net-carver for his inimitable knack of making things better.</p>

	<h2>Installation / Uninstallation</h2>

	<p class="required">Requires Textpattern 4.2.0+</p>

	<p>Download the plugin from either <a href="http://textpattern.org/plugins/1116/smd_bio">textpattern.org</a>, or the <a href="http://stefdawson.com/sw">software page</a>, paste the code into the <span class="caps">TXP</span> Admin -&gt; Plugins pane, install and enable the plugin. Visit the <a href="http://forum.textpattern.com/viewtopic.php?id=31496">forum thread</a> for more info or to report on the success or otherwise of the plugin.</p>

	<p>When you first visit the Extension-&gt;Bio Config page, the extra tables wil be installed automatically.</p>

	<p>To uninstall, simply delete from the Admin -&gt; Plugins page. But note the extra tables will remain until you delete them manually. A planned feature is to add buttons to the interface to allow deletion of all additional bio information and/or removal of the underlying tables.</p>

	<h2>Configuring bio items</h2>

	<p>Visit the Extensions-&gt;Bio config tab. Add bio items such as cell/work/fax numbers, department, mugshot, postal address, job title, whatever you wish. Just add one at a time and hit Save in between. The items will be listed below the form, and can be sorted at will. Each item comprises:</p>

	<ul>
		<li><strong>Name</strong> : an internal name with which you wish to refer to your bio item. Avoid characters such as spaces and &#8216;weird&#8217; characters here</li>
		<li><strong>Title</strong> : a human-friendly name for your bio item. This is displayed to the left of the input control on the Admin-&gt;Users panel, and as a label on your article pages</li>
		<li><strong>Type</strong> : the type of data you wish to collect. This will be the variety of input control you see on the Admin-&gt;Users tab</li>
		<li><strong>Size</strong> : the dimensions of the chosen input control. Takes one or two comma-separated values, the interpretation of which depends on the item <em>Type</em>:
	<ul>
		<li>for text-based input fields, the first is the width of the box (in characters) and the second is the maximum number of characters a user can type (0 = leave at default)</li>
		<li>for textareas, it is the width and height of the box in characters, respectively</li>
		<li>for images, the two values are the x and y dimensions of the image/thumbnail on the Admin-&gt;Users tab. If only one value is given, the image will be square. If either value is omitted, the image or thumbnail dimensions (as stored in the database) are used instead</li>
		<li>for other types, the Size is currently unused</li>
	</ul></li>
		<li><strong>Value</strong> : depends on the item <em>Type</em>:
	<ul>
		<li>for text-based items, this is the default value that will be in the text box. You can use this to initialise an entry, or offer instructions like &#8220;Type your job description here&#8221;</li>
		<li>for list, radio and checkbox items, this is used to configure the available options. Either put one item per line or use a comma to separate each item. If you just list items, they will be used as labels exactly as you define them. When referring to them in <code>&lt;txp:smd_bio_info /&gt;</code> their <em>names</em> will be all lower case, have &#8216;non-web-safe&#8217; characters removed, and will have spaces converted to underscores. If you wish to define your own names and labels, use the syntax: <code>option_name1 =&gt; option_label1, option_name2 =&gt; option_label2, ...</code>. For example a Departments dropdown list might be defined as <code>sales =&gt; Sales, mktg =&gt; Marketing, eng =&gt; Engineering, qual =&gt; Quality assurance, it =&gt; Tech support</code> or <code>Sales, Marketing, Engineering, Quality assurance, Tech support</code> &#8212; in which case you would refer to your new items with these names, respectively: <code>sales, marketing, engineering, quality_assurance, tech_support</code>. In select lists, you may put an empty item at the top if you wish. In select lists and radio sets you may also mark one label with <code>[*]</code> to indicate it is the default</li>
		<li>for images, it can be used to specify the parent category name under which the desired images are stored. If omitted, all images are available in the image select list</li>
	</ul></li>
		<li><strong>Position</strong> : the order in which the items appear on the Admin-&gt;Users tab. The lower the number the higher up the screen it will be. The numbers <em>do not</em> have to be sequential &#8212; it is advised you set them with a gap between them (e.g. 10 or 20) so you can alter the order fairly easily</li>
	</ul>

	<p>Note that the Date/time Type is functionally identical to a Text box. This may change in future.</p>

	<h2>Entering user data</h2>

	<p>Your configured items will appear on the Admin-&gt;Users tab beneath the usual crop of data input controls. Simply enter data in them and it will be saved along with the existing user data. Hit <em>Edit</em> and any configured info will be retrieved for editing.</p>

	<p>When choosing an image, you can either type its ID in the box or use the dropdown select list to choose an image. The chosen image will appear below the input controls.</p>

	<p>If you wish to alter the layout of the input controls, you may create a standard stylesheet in Presentation-&gt;Style and name it <code>smd_bio</code>. It will be loaded automatically.</p>

	<p>To view the extended bio information for a user, hover over the <em>Edit</em> link of an item in the list; a tooltip will appear showing some of the extended bio.</p>

	<h2>Displaying user bio info</h2>

	<h3><code>&lt;txp:smd_bio_info&gt;</code></h3>

	<p>Use this tag to display pieces of info from the biography. One or more of these tags can be employed depending on how you prefer to work. It may also be used as a container (or via the <code>form</code> attribute) to allow you to embed other Texpattern tags and/or special <a href="#reptags">replacement tags</a> to format the output.</p>

	<p>Use the following attributes to tweak the output:</p>

	<ul>
		<li><span class="atnm">author</span> : list of author login names you wish to display info from. If omitted, the current (individual article) author will be used. You may specify any item as <code>SMD_PRIVS:</code> and then colon-separate priv numbers. Any users with those matching level(s) will be displayed</li>
		<li><span class="atnm">items</span> : list of bio item <em>names</em> you wish to display, in the order you wish to display them. Defaults to all items. Note you can also use bio information from the standard <span class="caps">TXP</span> user info, i.e. you can use any of the following, (case sensitive) :
	<ul>
		<li><code>user_id</code></li>
		<li><code>name</code> (login name)</li>
		<li><code>RealName</code></li>
		<li><code>email</code></li>
		<li><code>privs</code></li>
		<li><code>last_access</code></li>
	</ul></li>
		<li><span class="atnm">exclude</span> : list of bio item <em>names</em> you do <strong>not</strong> wish to display. This overrides <code>items</code></li>
		<li><span class="atnm">form</span> : the name of a <span class="caps">TXP</span> Form with which to process each item. If not specified, the tag&#8217;s container will be used instead. If the container is empty, default output is used</li>
		<li><span class="atnm">itemwraptag</span> : (X)HTML tag to wrap around each item</li>
		<li><span class="atnm">itemclass</span> : fixed <span class="caps">CSS</span> class name to add to each item. The default is to automatically assign <code>smd_bio_name_of_item</code> (e.g. smd_bio_cell, smd_bio_dept, etc)</li>
		<li><span class="atnm">break</span> : (X)HTML tag to put between each item</li>
		<li><span class="atnm">wraptag</span> : (X)HTML tag to wrap around each author&#8217;s record</li>
		<li><span class="atnm">class</span> : <span class="caps">CSS</span> class to apply to the wraptag</li>
		<li><span class="atnm">labeltag</span> : (X)HTML tag to wrap around the item&#8217;s label (if used)</li>
		<li><span class="atnm">labelclass</span> : <span class="caps">CSS</span> class to apply to the label. The default is to automatically assign <code>smd_bio_name_of_item</code> (e.g. smd_bio_phone, smd_bio_home_address, etc)</li>
		<li><span class="atnm">label</span> : whether to display a label or not for each item. Choose from:
	<ul>
		<li><strong>1</strong> : (default) Display the Title of the item</li>
		<li><strong>0</strong> : Display the Name of the item</li>
		<li><strong>some label</strong> : Display the given text as a label</li>
		<li>&#8220;&#8221; (i.e. empty) : Do not display any label</li>
	</ul></li>
	</ul>

	<h4 id="reptags">Replacement tags</h4>

	<p>Inside the smd_bio_info <code>form</code> or container you may utilise special replacement tags that allow you to display any pieces of content from the current item. The core replacement tags are:</p>

	<ul>
		<li><code>{smd_bio_info_item}</code> : the given value of the current item</li>
		<li><code>{smd_bio_info_name}</code> : the sanitized name of the column corresponding to this item</li>
		<li><code>{smd_bio_info_title}</code> : the human-friendly title you assigned this item</li>
		<li><code>{smd_bio_info_itemclass}</code> : the name of the class associated with this item</li>
		<li><code>{smd_bio_info_labelclass}</code> : the name of the class associated with this item&#8217;s label</li>
		<li><code>{smd_bio_*name*}</code> : the value of the named item (e.g. <code>smd_bio_cell</code>, <code>smd_bio_department</code>, etc)</li>
	</ul>

	<p>If you have elected to extract a list item such as radio, list or checkbox you will have some more replacement tags in the following format:</p>

	<ul>
		<li><code>{smd_bio_*name*_item_N}</code> : the value of each named item in turn, where N starts at 1 and increments</li>
		<li><code>{smd_bio_*name*_label_N}</code> : the value of each named item&#8217;s label in turn. Again, N starts at 1 and counts up for every item in your list</li>
		<li><code>{smd_bio_*name*_chosen_N}</code> : the value of each selected item in turn, where N starts at 1 and increments. For select and radio lists there will be only one; for checkbox groups there may be more</li>
		<li><code>{smd_bio_*name*_chosen_label_N}</code> : the value of each selected item&#8217;s label in turn, where N starts at 1 and increments</li>
		<li><code>{smd_bio_*name*_count}</code> : the total number of elements in the named list</li>
		<li><code>{smd_bio_*name*_chosen_count}</code> : the total number of selected elements in the named list</li>
	</ul>

	<h4>Replacement tag notes</h4>

	<p>If you extract more than one item at once in your <code>items</code> attribute, the individual named replacement variable won&#8217;t be available until the plugin has discovered them. For example:</p>

<pre class="block"><code class="block">&lt;txp:smd_bio_info items=&quot;cell, mug, dept&quot;&gt;
{smd_bio_info_title}: {smd_bio_cell}&lt;br /&gt;
{smd_bio_info_title}: {smd_bio_mug}&lt;br /&gt;
{smd_bio_info_title}: {smd_bio_dept}&lt;br /&gt;
&lt;/txp:smd_bio_info&gt;
</code></pre>

	<p>would output:</p>

<pre class="block"><code class="block">Mobile number: 555-SQUID
Mobile number: {smd_bio_mug}
Mobile number: {smd_bio_dept}
Mugshot: 555-SQUID
Mugshot: 2
Mugshot: {smd_bio_dept}
Dept: 555-SQUID
Dept: 2
Dept: eng
</code></pre>

	<p>Not quite what you wanted! For this reason it is best to use the individual named items <strong>only</strong> when you are using a single <code>item</code>. See <a href="#eg4">Example 4</a> for ways round this:</p>

	<p>If you wish to see an entire list of available replacement tags as the plugin builds them up, add <code>debug=&quot;1&quot;</code> to your smd_bio_info tag.</p>

	<h3><code>&lt;txp:smd_bio_articles&gt;</code></h3>

	<p>A simple convenience wrapper for <code>&lt;txp:article_custom /&gt;</code> that sets the <code>author</code> attribute to the person who wrote the current article. If you specify an author, that person will be used instead. In all other regards, the tag functions identically to <a href="http://textpattern.net/wiki/index.php?title=article_custom">article_custom</a> and can be used as a container if you wish.</p>

	<p class="required"><span class="caps">IMPORTANT</span>: take care when using this tag inside your default form. If you do not specify your own container or a dedicated <code>form</code>, you will receive a <em>circular reference error</em> from <span class="caps">TXP</span> as it tries to call the default form, which calls the default form, which calls the default form&#8230;</p>

	<h2>Examples</h2>

	<h3 id="eg1">Example 1: List bio fields</h3>

<pre class="block"><code class="block">&lt;txp:smd_bio_info
     items=&quot;jobtitle, extension, cell, department&quot;
     labeltag=&quot;dt&quot; wraptag=&quot;dl&quot;
     itemwraptag=&quot;dd&quot; class=&quot;record&quot; /&gt;
</code></pre>

	<p>Shows the job title, work&#8217;s extension number, cell phone number and department of the current author, as a definition list.</p>

	<h3 id="eg2">Example 2: List users by priv level</h3>

<pre class="block"><code class="block">&lt;txp:smd_bio_info
     author=&quot;mr_pub, SMD_PRIVS:4:3&quot;
     items=&quot;name, RealName, department&quot;
     labeltag=&quot;dt&quot; wraptag=&quot;dl&quot;
     itemwraptag=&quot;dd&quot; /&gt;
</code></pre>

	<p>Shows the name, real name and department of all <em>Copy Editors</em> and <em>Staff Writers</em> and the user &#8216;mr_pub&#8217;.</p>

	<h3 id="eg3">Example 3: Using smd_bio_articles</h3>

<pre class="block"><code class="block">&lt;txp:smd_bio_info items=&quot;photo&quot; label=&quot;&quot;&gt;
   &lt;txp:image id=&quot;{smd_bio_photo}&quot; /&gt;
&lt;/txp:smd_bio_info&gt; Recent articles by
   &lt;a href=&quot;/desks/&lt;txp:smd_bio_info
        items=&#39;department&#39; label=&quot;&quot; /&gt;&quot;&gt;
        &lt;txp:smd_bio_info items=&quot;RealName&quot;
           label=&quot;&quot; /&gt;
     &lt;/a&gt;:
&lt;txp:smd_bio_articles limit=&quot;6&quot;
     wraptag=&quot;ul&quot; break=&quot;li&quot;&gt;
   &lt;txp:permlink&gt;&lt;txp:title /&gt;&lt;/txp:permlink&gt;
&lt;/txp:smd_bio_articles&gt;
</code></pre>

	<p>Displays the author photo, the author&#8217;s RealName linked to the section that explains about the department to which she belongs, then lists the 6 most recent articles by her. Note the use of <code>label=&quot;&quot;</code> to suppress the automatic labelling of items and our use of a replacement tag to feed <code>&lt;txp:image /&gt;</code> with the ID of the selected photo.</p>

	<h3 id="eg4">Example 4: Nesting tags</h3>

<pre class="block"><code class="block">&lt;txp:smd_bio_info author=&quot;SMD_PRIVS:5&quot; items=&quot;name&quot;&gt;
   &lt;!-- For each author&#39;s name --&gt;
   &lt;a class=&quot;image&quot;
     href=&quot;/blog/&lt;txp:smd_bio_info author=&quot;{smd_bio_info_item}&quot;
       items=&quot;name&quot; label=&quot;&quot; /&gt;&quot;
     title=&quot;browse other posts by this author&quot;&gt;
      &lt;img class=&quot;thumb&quot;
        src=&quot;/images/&lt;txp:smd_bio_info author=&#39;{smd_bio_info_item}&#39;
        items=&#39;image&#39; label=&#39;&#39; /&gt;.jpg&quot; /&gt;
   &lt;/a&gt;
   &lt;div class=&quot;summary&quot;&gt;
      &lt;txp:smd_bio_info author=&#39;{smd_bio_info_item}&#39;
	     items=&#39;profile&#39; label=&#39;&#39; /&gt;
   &lt;/div&gt;
&lt;/txp:smd_bio_info&gt;
</code></pre>

	<p>Note that we iterate over each author first and then plug the <code>{smd_bio_info_item}</code> (the author&#8217;s name) into each nested <code>smd_bio_info</code> tag. This pulls out individual items just for that author and inserts them in the markup, again using <code>label=&quot;&quot;</code> to omit the label.</p>

	<h2>Changelog</h2>

	<ul>
		<li>14 Jul 09 | 0.1 | Initial (non-public) release</li>
		<li>21 Aug 09 | 0.2 | First public release ; no image/thumb output ; experimental <code>options</code> attribute removed ; container/form accepts <span class="caps">TXP</span> tags ; fixed textbox size limit (thanks MattD)</li>
		<li>31 Aug 09 | 0.3 | Removed <code>item</code> attribute ; fixed warning message if using single items ; hidden pref <code>smd_bio_sanitize_name</code> forces sanitized login names</li>
		<li>08 Jun 10 | 0.31 | Javascript only appears on admin tab (thanks redbot/Gocom)</li>
	</ul>

</div>
<!-- *** BEGIN PLUGIN CSS *** -->
<style type="text/css">
#smd_help { line-height:1.5 ;}
#smd_help code { font-weight:bold; font: 105%/130% "Courier New", courier, monospace; background-color: #FFFFCC;}
#smd_help code.block { font-weight:normal; border:1px dotted #999; background-color: #f0e68c; display:block; margin:10px 10px 20px; padding:10px; }
#smd_help h1 { color: #369; font: 20px Georgia, sans-serif; margin: 0; text-align: center; }
#smd_help h2 { border-bottom: 1px solid black; padding:10px 0 0; color: #369; font: 17px Georgia, sans-serif; }
#smd_help h3 { color: #275685; font: bold 12px Arial, sans-serif; letter-spacing: 1px; margin: 10px 0 0;text-transform: uppercase; text-decoration:underline;}
#smd_help h4 { font: bold 11px Arial, sans-serif; letter-spacing: 1px; margin: 10px 0 0 ;text-transform: uppercase; }
#smd_help .atnm { font-weight:bold; color:#33d; }
#smd_help .mand { background:#eee; border:1px dotted #999; }
#smd_help table {width:90%; text-align:center; padding-bottom:1em;}
#smd_help td, #smd_help th {border:1px solid #999; padding:.5em 0;}
#smd_help ul { list-style-type:square; }
#smd_help .required {color:red;}
#smd_help li { margin:5px 20px 5px 30px; }
#smd_help .break { margin-top:5px; }
</style>
<!-- *** END PLUGIN CSS *** -->
";s:4:"code";s:34526:"// TODO:
//  Use an array like $types = array( 'int' => array( sql_type='INTEGER', widget="TEXT", widget_constraint="is_integer" ), );
//   --> Populate the select box from this array
//  Add 'index' checkbox to allow an Index to be added to a meta column
//  Ability to specify wildcards/matches for items/authors in the client tag
//  Specify tooltip extended bio information in prefs
if (@txpinterface == 'admin') {
	add_privs('smd_bio', '1');
	register_tab('extensions', 'smd_bio', smd_bio_gTxt('admin_tab'));
	register_callback('smd_bio', 'smd_bio');
	register_callback('smd_bio_fields', 'author_ui', 'extend_detail_form');
	register_callback('smd_bio_admin_js', 'admin_side', 'head_end');
	// Note these are all pre TXP's involvement
	register_callback('smd_bio_save', 'admin', 'author_save', 1);
	register_callback('smd_bio_save', 'admin', 'author_save_new', 1);
	register_callback('smd_bio_delete', 'admin', 'admin_multi_edit', 1);
}
$step = gps('step');
if ($step == 'smd_bio_get_image') {
	smd_bio_get_image();
}
if ($step == 'smd_bio_get_ebio') {
	smd_bio_get_ebio();
}

global $smd_bio_types;
$smd_bio_types = array(
		'text_input' => 'Text box',
		'list' => 'Select list',
		'radio' => 'Radio set',
		'yesnoradio' => 'Yes/no radio',
		'checkbox' => 'Checkbox(es)',
		'textarea' => 'Text area',
		'image' => 'Image',
		'datetime' => 'Date/Time'
	);

if (!defined('SMD_BIO')) {
	define("SMD_BIO", 'smd_bio');
}
if (!defined('SMD_BIO_META')) {
	define("SMD_BIO_META", 'smd_bio_meta');
}

// ************************
// ADMIN -> USERS TAB
// ------------------------
function smd_bio_fields($evt, $stp, $mt, $data) {
	$out = $vals = array();

	$rstep = gps('step');
	if(smd_bio_table_exist()) {
		if ($rstep == 'author_edit') {
			extract(gpsa(array('user_id')));
			// Shame we have to double de-clutch here but we can't index on user_id unfortunately ('cos when
			// inserting new users, the bio functions run _BEFORE_ an auto_increment ID has been generated by TXP)
			$uname = safe_field('name','txp_users',"user_id = '$user_id'");
			$vals = safe_row('*', SMD_BIO, "user_ref='$uname'");
		}
		$widgets = safe_rows('*', SMD_BIO_META, '1=1 ORDER BY position');
		$tdac = ' class="noline"';
		$tdac_image = ' class="noline smd_bio_image_cell"';
		foreach ($widgets as $widget) {
			$val = ($vals && isset($vals[$widget['name']])) ? $vals[$widget['name']] : $widget['val'];
			$title = ($widget['title']) ? $widget['title'] : $widget['name'];
			$sizeopts = do_list($widget['size']);
			$size1 = ($sizeopts[0] > 0) ? $sizeopts[0] : '';
			$size2 = (isset($sizeopts[1]) && $sizeopts[1] > 0) ? $sizeopts[1] : '';
			$name = 'smd_bio_'.$widget['name'];
			switch($widget['type']) {
				case 'list':
					$selv = smd_bio_splitval($widget['val']);
					list($selv, $dflt) = smd_bio_get_default($selv, $val);
					$out[] = tr(fLabelCell($title).tda(selectInput($name, $selv, $dflt, false, '', $name), $tdac), ' class="smd_bio_select '.$name.'"');
					break;
				case 'radio':
					$selv = smd_bio_splitval($widget['val']);
					list($selv, $dflt) = smd_bio_get_default($selv, $val);
					$out[] = tr(fLabelCell($title).tda(radioSet($selv, $name, $dflt), $tdac), ' class="smd_bio_radio '.$name.'"');
					break;
				case 'yesnoradio':
					$out[] = tr(fLabelCell($title).tda(yesnoRadio($name, $val), $tdac), ' class="smd_bio_radio '.$name.'"');
					break;
				case 'checkbox':
					$selv = smd_bio_splitval($widget['val']);
					$val = ($vals && isset($vals[$widget['name']])) ? $vals[$widget['name']] : '';
					$checkedVals = do_list($val);
					$items = array();
					foreach ($selv as $idx => $lbl) {
						// Not using checkbox() because it doesn't support onclick
						$items[] = '<input type="checkbox" name="cb_'.$name.'" value="'.$idx.'"'.((in_array($idx, $checkedVals)) ? ' checked="checked"' : '') . ' class="checkbox" onclick="smd_bio_checkbox(\''.$name.'\');" />'.$lbl;
					}
					$out[] = tr(fLabelCell($title).tda(join('', $items), $tdac), ' class="smd_bio_checkbox '.$name.'"').fInput('hidden',$name,$val,'','','','','',$name);
					break;
				case 'textarea':
					// Not using text_area() because it forces inline styled width/height which should be in CSS
					$size1 = ($size1 == '' || $size1 == 0) ? 40 : $size1;
					$size2 = ($size2 == '' || $size2 == 0) ? 5 : $size2;
					$out[] = tr(fLabelCell($title).tda('<textarea id="'.$name.'" name="'.$name.'" class="smd_bio_textarea" cols="'.$size1.'" rows="'.$size2.'">'.htmlspecialchars($val).'</textarea>', $tdac), ' class="smd_bio_textarea '.$name.'"');
					break;
				case 'image':
					$parent = $widget['val'];
					$val = ($vals && isset($vals[$widget['name']])) ? $vals[$widget['name']] : '';
					$where = ($parent) ? "category='$parent'" : '1=1';
					$tree = safe_rows('*', 'txp_image', $where);
					$selv = array();
					foreach ($tree as $row) {
						$selv[$row['id']] = $row['name'];
					}
					$out[] = tr(fLabelCell($title).tda('<input type="text" value="'.htmlspecialchars($val).'" name="'.$name.'" size="4" class="smd_bio_image_id" />'.selectInput($name.'_list', $selv, $val, true, '').'<div class="smd_bio_image"></div><span class="smd_bio_image_data" title="'.(($size1) ? $size1 : '').','.(($size2) ? $size2 : $size1).'"></span>', $tdac_image. ' id="'.$name.'"'), ' class="smd_bio_image_row '.$name.'"');
					break;
				case 'datetime':
				case 'text_input':
					// Not using fInput() because it has no MAXLENGTH property
					$size1 = ($size1 == '' || $size1 == 0) ? 25 : $size1;
					$size2 = ($size2 == '' || $size2 == 0) ? $size1 : $size2;
					$out[] = tr(fLabelCell($title).tda('<input type="text" value="'.htmlspecialchars($val).'" name="'.$name.'" id="'.$name.'" size="'.$size1.'" maxlength="'.$size2.'" class="smd_bio_text edit" />', $tdac), ' class="smd_bio_text_input '.$name.'"');
					break;
			}
		}
	}
	return join('', $out);
}

// ------------------------
// Read a name/val array and remove any [*] marker which indicates a default item
function smd_bio_get_default($list, $curr) {
	$out = array();
	$dflt = $new_dflt = '';
	foreach ($list as $item => $value) {
		if (($pos = strpos($value, '[*]')) !== false) {
			$out[$item] = substr($value, 0, $pos);
			$new_dflt = $item;
		} else {
			$out[$item] = $value;
		}
		if ($item == $curr) {
			$dflt = $item;
		}
	}
	$dflt = ($dflt) ? $dflt : $new_dflt;
	return array($out, $dflt);
}

// ------------------------
// AJAX calls
function smd_bio_get_image() {
	global $img_dir;

	$id = gps('id');
	if ($id) {
		$rs = safe_row('*', 'txp_image', "id = '$id'");
		extract($rs);
		$out = array();
		$out['thumb'] = ($thumbnail) ? hu.$img_dir.'/'.$id.'t'.$ext : '';
		$out['image'] = hu.$img_dir.'/'.$id.$ext;
		$out['w'] = $w;
		$out['h'] = $h;
		$out['thw'] = ($thumb_w) ? $thumb_w : '';
		$out['thh'] = ($thumb_h) ? $thumb_h : '';
		send_xml_response($out);
	} else {
		send_xml_response();
	}
}

// ------------------------
// IMPORTANT: constants NOT used for table names
function smd_bio_get_ebio() {
	include_once txpath.'/publish/taghandlers.php';

	$id = gps('id');
	$core = array('user_ref');
	$rs = safe_row('*', 'smd_bio', "user_ref = '$id'");
	$meta = safe_rows('*', 'smd_bio_meta', "1=1");
//	$include = array_merge($core, array('mug', 'cell', 'department')); // TODO: get these from prefs/meta table
	$allowed_types = array('text_input', 'textarea', 'datetime');
	$out = array();
	foreach ($rs as $idx => $val) {
//		if (in_array($idx, $include)) {
			if (in_array($idx, $core)) {
				$out[$idx] = doSlash($val);
			} else {
				foreach($meta as $row) {
					if ($row['name'] == $idx) {
						if ($row['type'] == "image") {
							$out[$idx] = 'smd_image::'.thumbnail(array('id'=> $val));
						} else if (in_array($row['type'], $allowed_types)) {
							$out[$idx] = $row['title'].'::'.htmlspecialchars(strip_tags($val), ENT_QUOTES);
						}
						break;
					}
				}
			}
//		}
	}
	send_xml_response($out);
}

// ------------------------
function smd_bio_admin_js($evt, $stp) {
	global $event;

	if ($event != 'admin' && $event != 'smd_bio') {
		return false;
	}

	$css = safe_field('css', 'txp_css', "name='smd_bio'");
	if ($css) {
		$css = '<style type="text/css">'.n.base64_decode($css).n.'</style>';
	}
	$css .= <<<EOCSS
<style type="text/css">
#tooltip{
	position:absolute;
	border:1px solid #333;
	background:#f7f5d1;
	padding:2px 5px;
	color:#333;
	display:none;
}
</style>
EOCSS;
	echo <<<EOJS
<script type="text/javascript">
//<![CDATA[

	// Concatenate checkbox options for storage
	function smd_bio_checkbox(dest) {
		var out = [];
		jQuery(":checkbox").each(function() {
			var item = jQuery(this);
			if (item.attr('name').replace('cb_','') == dest) {
				if (item.attr('checked') == true) {
					out.push(item.val());
				}
			}
		});
		jQuery('#'+dest).val(out.join(','));
	}

jQuery(function() {
	// Grab images from the server when the select/textbox change
	jQuery(".smd_bio_image_id").blur(function() {
		id = jQuery(this).parent().attr('id');
		val = jQuery(this).val();
		smd_bio_get_image(id, val);
	}).blur();
	jQuery(".smd_bio_image_cell .list").change(function() {
		id = jQuery(this).parent().attr('id');
		val = jQuery(this).val();
		smd_bio_get_image(id, val);
	});
	function smd_bio_get_image(id, val) {
		jQuery("#" + id + " select option[value='"+val+"']").attr("selected", true);
		jQuery("#" + id + " input").val(val);
		var dims = jQuery("#" + id + " span.smd_bio_image_data").attr('title');
		var size = new Array();
		if (dims) {
			size = dims.split(",");
		}
		sendAsyncEvent({
				event: textpattern.event,
				step: 'smd_bio_get_image',
				id: val
			}, function(data) {
				data = jQuery(data);
				if (data) {
					var full = 0;
					var imgLink = data.find('thumb').attr('value');
					if (imgLink == '') {
						full = 1;
						var imgLink = data.find('image').attr('value');
					}
					if (size[0] == '') {
						if (full == 1) {
							size[0] = data.find('w').attr('value');
						} else {
							size[0] = data.find('thw').attr('value');
						}
					}
					if (size[1] == '') {
						if (full == 1) {
							size[1] = data.find('h').attr('value');
						} else {
							size[1] = data.find('thh').attr('value');
						}
					}
					jQuery("#" + id + " .smd_bio_image").fadeIn().html('<img src="'+imgLink+'" width="'+size[0]+'" height="'+size[1]+'" />');
				} else {
					jQuery("#" + id + " .smd_bio_image").fadeOut().empty();
				}
			}
		);
	}

	// Grab the extended info when hovering an author in the list
	jQuery("form table#list tr").each(function(e) {
		var tt = '';
		var row = jQuery(this);
		if (row.attr("title") == '') {
			var person = row.find("td:first").text();
			sendAsyncEvent({
					event: textpattern.event,
					step: 'smd_bio_get_ebio',
					id: person
				}, function(data) {
					data = jQuery(data);
						var entry = data.find('user_ref');
						out = '';
						entry.nextAll().each(function(item) {
							node = jQuery(this).context.nodeName;
							if (node != 'http-status') {
								vall = jQuery(this).attr('value');
								if (vall) {
									vsplit = vall.split('::');
									if (vsplit[0].indexOf('smd_image') < 0) {
										out += ((vsplit.length>1) ? vsplit[0] : node) + ': ';
									}
									vall = ((vsplit.length>1) ? vsplit[1] : vsplit[0]);
									out += vall + '<br/>';
								} else {
									out += node+': ';
								}
							}
						});
						row.attr("title", out);
					}
			);
		}

		xOffset = 30;
		yOffset = 25;
		hovItem = row.find("td:last").prev();
		hovItem.hover(function(e) {
			tt = jQuery(this).parent().attr("title");
			if (tt != '') {
				jQuery(this).parent().attr("title", "");
				jQuery("body").append("<p id='tooltip'>"+ tt +"</p>");
				jQuery("#tooltip")
					.css("top",(e.pageY - xOffset) + "px")
					.css("left",(e.pageX + yOffset) + "px")
					.fadeIn("fast");
			}
		},
		function() {
			jQuery(this).parent().attr("title", tt);
			jQuery("#tooltip").remove();
	    });
		hovItem.mousemove(function(e) {
			jQuery("#tooltip")
				.css("top",(e.pageY - xOffset) + "px")
				.css("left",(e.pageX + yOffset) + "px");
		});


	});

	// Grey out the Size box for those items that don't use it
	jQuery("#page-smd_bio .list[name='type']").change(function() {
		var theType = jQuery("#page-smd_bio .list[name='type'] option:selected").val();
		var dest = "#page-smd_bio input[name='size']";
		if (theType == 'list' || theType == 'radio' || theType == 'yesnoradio' || theType == 'checkbox') {
			jQuery(dest).attr("disabled", true);
			jQuery(dest).parent().prev().css("color", '#999');
		} else {
			jQuery(dest).attr("disabled", false);
			jQuery(dest).parent().prev().css("color", '');
		}
	}).change();

	// Pop up the help tooltips based on the current Type
	jQuery(".pophelp.smd_bio_size").hover(
		function(e) {
			var theType = jQuery("#page-smd_bio .list[name='type'] option:selected").val();
			spanid = 'span#smd_bio_size_help_'+theType;
			this.title = jQuery(spanid).attr("title");
		}, function(e) {
			this.title = '';
		}
	);
	jQuery(".pophelp.smd_bio_val").hover(
		function(e) {
			var theType = jQuery("#page-smd_bio .list[name='type'] option:selected").val();
			spanid = 'span#smd_bio_val_help_'+theType;
			this.title = jQuery(spanid).attr("title");
		}, function(e) {
			this.title = '';
		}
	);
});
//]]>
</script>
{$css}
EOJS;
		}

// ------------------------
// Make the name/val pairs for selectInput / radio / checkbox sets
function smd_bio_splitval($val) {
	$selv = array();

	$wvals = explode(',', $val);
	foreach ($wvals as $wval) {
		$prts = explode('=>', $wval);
		if (count($prts) == 1) {
			$prts[1] = $prts[0];
			$prts[0] = smd_bio_sanitize($prts[0]);
		}
		$selv[trim($prts[0])] = trim($prts[1]);
	}
	return $selv;
}

// ------------------------
// Super-sanitize the passed value so we can make variable names from the returned string
function smd_bio_sanitize($val) {
	return strtolower(str_replace("-", "_", sanitizeForUrl($val)));
}

// ------------------------
function smd_bio_save($evt, $stp) {
	global $prefs;

	if (smd_bio_table_exist()) {
		$targetvars = array();
		extract(doSlash(psa(array('privs', 'name', 'email', 'RealName', 'user_id'))));
		if (get_pref('smd_bio_sanitize_name', 0) > 0) {
			// Sanitize and pass the new name forward to the actual txp_user save routine
			$name = strtolower(sanitizeForUrl($name));
			$_POST['name'] = $name;
		}
		$length = function_exists('mb_strlen') ? mb_strlen($name, '8bit') : strlen($name);

		if (($user_id || $name) and $length <= 64 and is_valid_email($email)) {
			foreach ($_POST as $idx => $item) {
				if (strpos($idx, 'smd_bio_') === 0) {
					$targetvars[] = $idx;
				}
			}

			// Double de-clutch again... dammit :-(
			$user_id = gps('user_id');
			if ($user_id) {
				$user_ref = safe_field('name','txp_users',"user_id = '$user_id'");
			} else {
				$user_ref = $name;
			}

			extract(gpsa($targetvars));
			$bcols = getThings('describe `'.PFX.SMD_BIO.'`');
			$sqlSet = array();
			foreach ($targetvars as $var) {
				$colname = str_replace('smd_bio_', '', $var);
				if (in_array($colname, $bcols)) {
					$sqlSet[] = "`$colname` = '".doSlash($$var)."'";
				}
			}
			if ($sqlSet) {
				$rs = safe_upsert(SMD_BIO, join(',', $sqlSet), "`user_ref` = '$user_ref'");
			}
		}
	}
}

// ------------------------
function smd_bio_delete($evt, $stp) {
	global $txp_user;

	if (smd_bio_table_exist()) {
		// Since we are executing 'pre' delete we need to unfortunately duplicate some of the checks
		// from txp_admin.php so we minimise the opportunity to delete someone by mistake
		$selected = ps('selected');
		$method = ps('edit_method');
		if (!$selected or !is_array($selected)) {
			return;
		}
		if ($method != 'delete') {
			return;
		}

		$names = safe_column('name', 'txp_users', "name IN ('".join("','", doSlash($selected))."') AND name != '".doSlash($txp_user)."'");
		if (!$names) return;

		$assign_assets = ps('assign_assets');
		if ($assign_assets === '') {
			return;
		} elseif (in_array($assign_assets, $names)) {
			return;
		} else {
			// All the checks passed -- do it
			safe_delete(SMD_BIO, "user_ref IN ('".join("','", doSlash($names))."')");
		}
	}
}


// ************************
// BIO CONFIGURATION
// ------------------------
// Tab handler
function smd_bio($event, $step) {
	if(!$step or !in_array($step, array(
			'smd_bio_meta_add',
			'smd_bio_meta_del',
			'smd_bio_meta_save',
		))) {
		smd_bio_config('');
	} else $step();
}

// ------------------------
function smd_bio_config($message) {
	if (!smd_bio_table_exist()) {
		smd_bio_install('');
		exit;
	}

	pagetop(smd_bio_gTxt('admin_tab'), $message);

	echo smd_bio_meta_edit();
	echo smd_bio_meta_list();
}

// ------------------------
function smd_bio_meta_edit() {
	global $smd_bio_types;

	$vars = array('step', 'id', 'title', 'name', 'type', 'size', 'val', 'position');
	$rs = array();

	extract(gpsa($vars));
	if ($id && $step == 'meta_edit') {
		$id = assert_int($id);
		$rs = safe_row('*', SMD_BIO_META, "id = $id");
		extract($rs);
	}

	if ($step == 'smd_bio_meta_save' || $step == 'smd_bio_meta_add' || $step == 'smd_bio_meta_del') {
		foreach ($vars as $var) {
			$$var = '';
		}
	}

	$caption = smd_bio_gTxt(($step == 'meta_edit') ? 'meta_edit' : 'meta_add');

	// Make the name/val pairs for selectInput
	$selv = array();
	foreach ($smd_bio_types as $widx => $wval) {
		$selv[$widx] = $wval;
	}

	return form(
		hed($caption, 3,' style="text-align: center;"').

		startTable('edit', '', 'edit-pane').

		tr(
			fLabelCell('name').
			($id && $step == 'meta_edit' ? td(strong($name)) : fInputCell('name', $name))
		).

		tr(
			fLabelCell('title').
			fInputCell('title', $title)
		).

		tr(
			fLabelCell('type').
			td(selectInput('type', $selv, $type, false))
		).

		tr(
			fLabelCell(smd_bio_gTxt('size')).
			fInputCell('size', $size).td(tag(smd_bio_gTxt('help'), 'a', ' class="pophelp smd_bio_size"'))
		).

		tr(
			fLabelCell('value').
			td(text_area('val', '50', '128', $val)).td(tag(smd_bio_gTxt('help'), 'a', ' class="pophelp smd_bio_val"'))
		).

		tr(
			fLabelCell(smd_bio_gTxt('position')).
			fInputCell('position', $position)
		).

		tr(
			td().
			td(
				fInput('submit', '', gTxt('save'), 'publish')
			)
		).

		endTable().

		eInput('smd_bio').
		($id ? hInput('id', $id).hInput('name', $name).sInput('smd_bio_meta_save') : sInput('smd_bio_meta_add')).
		tag(' ', 'span', ' id="smd_bio_size_help_text_input" title="'.smd_bio_gTxt('sizehelp_text_input').'"').
		tag(' ', 'span', ' id="smd_bio_size_help_list" title="'.smd_bio_gTxt('help_unused').'"').
		tag(' ', 'span', ' id="smd_bio_size_help_radio" title="'.smd_bio_gTxt('help_unused').'"').
		tag(' ', 'span', ' id="smd_bio_size_help_yesnoradio" title="'.smd_bio_gTxt('help_unused').'"').
		tag(' ', 'span', ' id="smd_bio_size_help_checkbox" title="'.smd_bio_gTxt('help_unused').'"').
		tag(' ', 'span', ' id="smd_bio_size_help_textarea" title="'.smd_bio_gTxt('sizehelp_textarea').'"').
		tag(' ', 'span', ' id="smd_bio_size_help_image" title="'.smd_bio_gTxt('sizehelp_image').'"').
		tag(' ', 'span', ' id="smd_bio_size_help_datetime" title="'.smd_bio_gTxt('sizehelp_text_input').'"').

		tag(' ', 'span', ' id="smd_bio_val_help_text_input" title="'.smd_bio_gTxt('valhelp_text_input').'"').
		tag(' ', 'span', ' id="smd_bio_val_help_list" title="'.smd_bio_gTxt('valhelp_lrc').'"').
		tag(' ', 'span', ' id="smd_bio_val_help_radio" title="'.smd_bio_gTxt('valhelp_lrc').'"').
		tag(' ', 'span', ' id="smd_bio_val_help_yesnoradio" title="'.smd_bio_gTxt('valhelp_ynr').'"').
		tag(' ', 'span', ' id="smd_bio_val_help_checkbox" title="'.smd_bio_gTxt('valhelp_lrc').'"').
		tag(' ', 'span', ' id="smd_bio_val_help_textarea" title="'.smd_bio_gTxt('valhelp_text_input').'"').
		tag(' ', 'span', ' id="smd_bio_val_help_image" title="'.smd_bio_gTxt('valhelp_image').'"').
		tag(' ', 'span', ' id="smd_bio_val_help_datetime" title="'.smd_bio_gTxt('valhelp_text_input').'"')
	);
}

// ------------------------
function smd_bio_meta_list() {
	global $smd_bio_types;

	extract(gpsa(array('sort', 'dir', 'crit', 'search_method')));
	if ($sort === '') $sort = get_pref('smd_bio_meta_sort_column', 'name');
	if ($dir === '') $dir = get_pref('smd_bio_meta_sort_dir', 'asc');
	$dir = ($dir == 'desc') ? 'desc' : 'asc';

	if (!in_array($sort, array('name', 'title', 'type', 'size', 'val', 'position'))) $sort = 'position';

	$sort_sql   = $sort.' '.$dir;

	set_pref('smd_bio_meta_sort_column', $sort, 'smd_bio', 2, '', 0, PREF_PRIVATE);
	set_pref('smd_bio_meta_sort_dir', $dir, 'smd_bio', 2, '', 0, PREF_PRIVATE);

	$switch_dir = ($dir == 'desc') ? 'asc' : 'desc';

	$rs = safe_rows_start('*', SMD_BIO_META, '1 = 1 ORDER BY '.$sort_sql);

	if ($rs) {
		echo '<form action="index.php" method="post" name="longform" onsubmit="return verify(\''.gTxt('are_you_sure').'\')">'.

		startTable('list').
		tr(
			column_head('name', 'name', 'smd_bio', true, $switch_dir, '', '', ('name' == $sort) ? $dir : '').
			column_head('title', 'title', 'smd_bio', true, $switch_dir, '', '', ('title' == $sort) ? $dir : '').
			column_head('type', 'type', 'smd_bio', true, $switch_dir, '', '', ('type' == $sort) ? $dir : '').
			column_head(smd_bio_gTxt('size'), 'size', 'smd_bio', true, $switch_dir, '', '', ('size' == $sort) ? $dir : '').
			column_head('value', 'val', 'smd_bio', true, $switch_dir, '', '', ('val' == $sort) ? $dir : '').
			column_head(smd_bio_gTxt('position'), 'position', 'smd_bio', true, $switch_dir, '', '', ('position' == $sort) ? $dir : '').
			hCell().
			hCell()
		);

		while ($a = nextRow($rs)) {
			extract(doSpecial($a));

			echo tr(
				td($name).
				td($title).
				td($smd_bio_types[$type]).
				td($size).
				td($val,200).
				td($position).
				td(eLink('smd_bio', 'meta_edit', 'id', $id, gTxt('edit'))).
				td(dLink('smd_bio', 'smd_bio_meta_del', 'id', $id, 1, 'name', $name))
			);
		}

		echo endTable().'</form>';
	}
}

// ------------------------
function smd_bio_meta_make_list($val) {
	$wvals = do_list($val, '\r\n');
	if (count($wvals) == 1) {
		$wvals = do_list($val);
	}
	return join(', ', doArray($wvals, 'trim'));
}

// ------------------------
function smd_bio_meta_save() {
	extract(doSlash(psa(array('id', 'name', 'title', 'type', 'size', 'val', 'position'))));
	$id = assert_int($id);
	$val = smd_bio_meta_make_list($val);

	$rs = safe_update(SMD_BIO_META, "
		title = '$title',
		type = '$type',
		size = '$size',
		val = '$val',
		position = '$position'",
		"id = $id"
	);

	if ($rs) {
		smd_bio_config(
			smd_bio_gTxt('meta_updated', array('{name}' => $name))
		);
	}
}

// ------------------------
function smd_bio_meta_add() {
	extract(doSlash(psa(array('name', 'title', 'type', 'size', 'val', 'position'))));
	$name = smd_bio_sanitize($name);

	if (!empty($name) && smd_bio_meta_check($name)) {
		$size = (empty($size)) ? 25 : $size;
		//TODO: make the selection of column more intelligent based on the given type
		if ($type == 'textarea') {
			$asize = '4096'; //TODO: Find a way to user specify this
			$coltype = 'text';
		} else {
			$asize = '64'; //TODO: Find a way to user specify this
			$coltype = 'varchar';
		}
		$ret = safe_alter(SMD_BIO, "ADD `$name` $coltype($asize) NULL");
		$val = smd_bio_meta_make_list($val);

		if ($ret) {
			$rs = safe_insert(SMD_BIO_META, "
				name = '$name',
				title = '$title',
				type = '$type',
				size = '$size',
				val = '$val',
				position = '$position'
			");

			if ($rs) {
				smd_bio_config(smd_bio_gTxt('meta_added'));
				return;
			}
					}
	}

	smd_bio_config(array(smd_bio_gTxt('meta_not_added'), E_ERROR));
}

// ------------------------
function smd_bio_meta_del() {
	extract(gpsa(array('id','name')));

	$id = assert_int($id);
	$message = smd_bio_gTxt('meta_not_deleted');

	$exists = smd_bio_meta_check($name);
	$ret = @safe_alter(SMD_BIO, "DROP COLUMN `$name`");
	if ($ret || $exists) {
		$ret = safe_delete(SMD_BIO_META, "id='$id'");
		$message = smd_bio_gTxt('meta_deleted');
	}

	smd_bio_config($message);
}

// ------------------------
function smd_bio_meta_check($col) {
	$ucols = getThings('describe `'.PFX.'txp_users`');
	$bcols = getThings('describe `'.PFX.SMD_BIO.'`');
	$cols = array_merge($ucols, $bcols);
 	return (!in_array($col, $cols));
}


// ************************
// TABLE GENERATION
// ------------------------
function smd_bio_table_exist() {
	if (gps('debug')) {
		echo "++ TABLE ".SMD_BIO_META." HAS ".count(@safe_show('columns', SMD_BIO_META))." COLUMNS;";
	}
	return(@safe_show('columns', SMD_BIO_META));
}

// ------------------------
function smd_bio_install($message) {
	global $smd_bio_types;

	$version = mysql_get_server_info();
	$GLOBALS['txp_err_count'] = 0;
	if ($version < "4.1.2") {
		$GLOBALS['txp_err_count']++;
		trigger_error("smd_bio requires MySQL v4.1.2 or greater.");
	} else {
		$ret = '';
		$sql = array();
		$sql[] = "CREATE TABLE IF NOT EXISTS `".PFX.SMD_BIO."` (
			`user_ref` varchar(64) NOT NULL default '',
			UNIQUE KEY `user_ref` (`user_ref`)
		) ENGINE=MyISAM PACK_KEYS=1 ";

		$sql[] = "CREATE TABLE IF NOT EXISTS `".PFX.SMD_BIO_META."` (
			`id` int(4) NOT NULL auto_increment,
			`title` varchar(64) NULL default '',
			`name` varchar(64) NOT NULL default '',
			`type` set(".doQuote(join("','", array_keys($smd_bio_types))).") NOT NULL default 'text_input',
			`size` varchar(10) NULL default 0,
			`val` text NULL default '',
			`position` tinyint(3) NULL default 0,
			PRIMARY KEY (`id`),
			UNIQUE KEY (`name`)
		) ENGINE=MyISAM AUTO_INCREMENT=1";

		if(gps('debug')) {
			dmp($sql);
		}
		foreach ($sql as $qry) {
			$ret = safe_query($qry);
			if ($ret===false) {
				$GLOBALS['txp_err_count']++;
				echo "<b>".$GLOBALS['txp_err_count'].".</b> ".mysql_error()."<br />\n";
				echo "<!--\n $qry \n-->\n";
			}
		}
	}

	if ($GLOBALS['txp_err_count'] == 0) {
		$message = smd_bio_gTxt('tbl_installed');
		smd_bio_config($message);
	} else {
		$message = smd_bio_gTxt('tbl_not_installed');
		smd_bio_config($message);
	}
}

// ************************
// CLIENT-SIDE TAGS
// ------------------------
function smd_bio_info($atts, $thing=NULL) {
	global $thisarticle;

	extract(lAtts(array(
		'author' => '',
		'items' => 'SMD_ALL',
		'exclude' => '',
		'form' => '',
		'wraptag' => '',
		'break' => '',
		'class' => '',
		'label' => '1',
		'labeltag' => '',
		'labelclass' => 'SMD_DFLT',
		'itemwraptag' => '',
		'itemclass' => 'SMD_DFLT',
		'debug' => '0',
	), $atts));

	$author = ($author) ? $author : (isset($thisarticle) ? $thisarticle['authorid'] : '');
	$author = do_list($author);
	$authors = array();
	$thing = (empty($form)) ? $thing : fetch_form($form);

	// Expand any priv levels
	foreach ($author as $user) {
		if (strpos(strtolower($user), "smd_privs") === 0) {
			$aprivs = explode(':', $user);
			array_shift($aprivs); // Remove smd_privs token from the array
			$authors = array_merge($authors, safe_column('name', 'txp_users', 'privs in (' . doQuote(join("','", $aprivs)) . ')'));
		} else {
			$authors[] = $user;
		}
	}

	$items = do_list($items);

	$exclude = do_list($exclude);
	$final = '';

	// The indices are the gTxt() names for the associated item
	$coreCols = array('id' => 'user_id', 'name' => 'name', 'real_name' => 'RealName', 'email' => 'email', 'privileges' => 'privs', 'date' => 'last_access');

	if ($authors) {
		$meta = safe_rows('*', SMD_BIO_META, '1=1');
		$cmeta = safe_show('columns', 'txp_users');
		$num = count($meta);
		$list_types = array('checkbox', 'radio', 'list');

		foreach($cmeta as $info) {
			if (!in_array($info['Field'], $coreCols)) continue;
			$meta[$num]['name'] = $info['Field'];
			$tField = join('', array_keys($coreCols, $info['Field']));
			$meta[$num]['title'] = (gTxt($tField) == $tField) ? smd_bio_gTxt($tField) : gTxt($tField);
			$length = (($off = strpos($info['Type'], '(')) !== false) ? $off : strlen($info['Type']); // Find the first open bracket or end of string
			$meta[$num]['type'] = substr($info['Type'], 0, $length);
			$num++;
		}
		if ($debug > 1) {
			echo '++ META DATA ++';
			dmp($meta);
		}

		// Exclusions override given items
		if ($exclude[0] != '' || in_array('SMD_ALL', $items)) {
			$items = safe_column('name', SMD_BIO_META, '1=1');
			$items = array_merge($items, $coreCols);
		}

		foreach ($authors as $user) {
			$cbio = safe_row('*', 'txp_users', "name='$user'");
			$ebio = safe_row('*', SMD_BIO, "user_ref='$user'");
			$idx = -1;
			$out = array();
			$replacements = array();

			foreach ($items as $iref => $whatnot) {
				if (in_array($whatnot, $exclude)) continue;

				// Find the meta row
				foreach ($meta as $num => $data) {
					if ($data['name'] == $whatnot) {
						$idx = $num;
						break;
					}
				}
				if ($idx > -1) {
					if (in_array($whatnot, $coreCols)) {
						$row = isset($cbio[$whatnot]) ? $cbio[$whatnot] : '';
					} else {
						$row = isset($ebio[$whatnot]) ? $ebio[$whatnot] : '';
					}

					if ($row) {
						if (in_array($meta[$idx]['type'], $list_types)) {
							$row = do_list($row);
							$row = join(', ',$row);
						}
						$theClass = ($itemclass=='SMD_DFLT') ? ' smd_bio_'.$meta[$idx]['name'] : (($itemclass) ? $itemclass : '');
						$labClass = ($labelclass=='SMD_DFLT') ? ' smd_bio_'.$meta[$idx]['name'] : (($labelclass) ? $labelclass : '');
						$theTitle = $meta[$idx]['title'];
						$theName = $meta[$idx]['name'];
						$replacements['{smd_bio_info_item}'] = $row;
						if (in_array($meta[$idx]['type'], $list_types)) {
							$chosens = do_list($row);
							$nv = smd_bio_splitval($meta[$idx]['val']);
							list($nv, $dflt) = smd_bio_get_default($nv, $row);
							$listctr=1;
							$chosenctr=0;
							foreach($nv as $listitem => $listlabel) {
								$replacements['{smd_bio_'.$theName.'_item_'.$listctr.'}'] = $listitem;
								$replacements['{smd_bio_'.$theName.'_label_'.$listctr.'}'] = $listlabel;
								if (in_array($listitem, $chosens)) {
									$chosenctr++;
									$replacements['{smd_bio_'.$theName.'_chosen_'.$chosenctr.'}'] = $listitem;
									$replacements['{smd_bio_'.$theName.'_chosen_label_'.$chosenctr.'}'] = $listlabel;
								}
								$listctr++;
							}
							$replacements['{smd_bio_'.$theName.'_count}'] = $listctr-1;
							$replacements['{smd_bio_'.$theName.'_chosen_count}'] = $chosenctr;
						}
						$replacements['{smd_bio_info_name}'] = $theName;
						$replacements['{smd_bio_info_title}'] = $theTitle;
						$replacements['{smd_bio_info_itemclass}'] = $theClass;
						$replacements['{smd_bio_info_labelclass}'] = $labClass;
						$replacements['{smd_bio_'.$theName.'}'] = $row;
						if ($debug) {
							echo '++ REPLACEMENTS ++';
							dmp($replacements);
						}
						$toParse = (!empty($thing)) ? $thing : (tag((($label==1) ? $theTitle : (($label=='') ? '' : (($label) ? $label : $theName))), (($labeltag)?$labeltag:'br/'), (($labelclass)? ' class="'.$labClass.'"' : '')).(($itemwraptag) ? doTag($row, $itemwraptag, $theClass): $row));

						$out[] = parse(strtr($toParse, $replacements));
					}
				}
			}

			$final .= ($wraptag) ? doWrap($out, $wraptag, $break, $class) : join('', $out);
		}
	}
	return $final;
}

// ------------------------
// A wrapper to article_custom that auto sets the user to the one specified
// or the current article's author.
// NOTE: lAtts() is NOT used because that limits the plugin attributes.
function smd_bio_articles($atts, $thing=NULL) {
	global $thisarticle;

	$author = (isset($atts['author'])) ? $atts['author'] : (isset($thisarticle) ? $thisarticle['authorid'] : '');
	$atts['author'] = $author;
	return parseArticles($atts, '1', $thing);
}

// ------------------------
// Plugin-specific replacement strings - localise as required
function smd_bio_gTxt($what, $atts = array()) {
	$lang = array(
		'admin_tab' => 'Bio Config',
		'help' => 'Tip',
		'help_unused' => 'Unused for this Type',
		'id' => 'ID',
		'name' => 'Name',
		'meta_add' => 'Add bio item',
		'meta_added' => 'Bio item added',
		'meta_not_added' => 'Problem adding bio item: check name is not already used',
		'meta_deleted' => 'Bio item and all its data deleted',
		'meta_not_deleted' => 'Problem deleting bio item: it may still exist',
		'meta_edit' => 'Edit bio item',
		'meta_updated' => 'Bio item "{name}" updated',
		'position' => 'Position',
		'privileges' => 'Privileges',
		'real_name' => 'Full name',
		'size' => 'Size',
		'sizehelp_text_input' => 'Up to two values specifying the number of characters: 1) of the input box on the Admin->Users tab, 2) the user is allowed to enter',
		'sizehelp_textarea' => 'Up to two values specifying the dimensions of the textarea in characters: 1) Width, 2) Height',
		'sizehelp_image' => 'The x, y dimensions of the image/thumbnail on the Admin->Users tab. If only one value is given, the image will be square. If either value is omitted, the dimensions stored in the database will be used instead',
		'valhelp_text_input' => 'The default value that will appear in the text box',
		'valhelp_lrc' => 'Comma- or newline-separated list of available options in the set. If you list only item labels, the names will be automatically assigned (lower case, no spaces). You may specify your own names using: name1 => Label 1, name2 -> Label 2, ...',
		'valhelp_ynr' => 'Default value of the Yes/No checkbox. 0 (or omitted) = No; 1 = Yes',
		'valhelp_image' => 'Limit the images in the dropdown to the ones in this given parent image category. If omitted, all images are available',
		'tbl_installed' => 'Tables installed.',
		'tbl_not_installed' => 'Tables NOT installed.',
		'title' => 'Title',
		'type' => 'Type',
		'value' => 'Value',
	);
	return strtr($lang[$what], $atts);
}";s:12:"code_restore";s:34526:"// TODO:
//  Use an array like $types = array( 'int' => array( sql_type='INTEGER', widget="TEXT", widget_constraint="is_integer" ), );
//   --> Populate the select box from this array
//  Add 'index' checkbox to allow an Index to be added to a meta column
//  Ability to specify wildcards/matches for items/authors in the client tag
//  Specify tooltip extended bio information in prefs
if (@txpinterface == 'admin') {
	add_privs('smd_bio', '1');
	register_tab('extensions', 'smd_bio', smd_bio_gTxt('admin_tab'));
	register_callback('smd_bio', 'smd_bio');
	register_callback('smd_bio_fields', 'author_ui', 'extend_detail_form');
	register_callback('smd_bio_admin_js', 'admin_side', 'head_end');
	// Note these are all pre TXP's involvement
	register_callback('smd_bio_save', 'admin', 'author_save', 1);
	register_callback('smd_bio_save', 'admin', 'author_save_new', 1);
	register_callback('smd_bio_delete', 'admin', 'admin_multi_edit', 1);
}
$step = gps('step');
if ($step == 'smd_bio_get_image') {
	smd_bio_get_image();
}
if ($step == 'smd_bio_get_ebio') {
	smd_bio_get_ebio();
}

global $smd_bio_types;
$smd_bio_types = array(
		'text_input' => 'Text box',
		'list' => 'Select list',
		'radio' => 'Radio set',
		'yesnoradio' => 'Yes/no radio',
		'checkbox' => 'Checkbox(es)',
		'textarea' => 'Text area',
		'image' => 'Image',
		'datetime' => 'Date/Time'
	);

if (!defined('SMD_BIO')) {
	define("SMD_BIO", 'smd_bio');
}
if (!defined('SMD_BIO_META')) {
	define("SMD_BIO_META", 'smd_bio_meta');
}

// ************************
// ADMIN -> USERS TAB
// ------------------------
function smd_bio_fields($evt, $stp, $mt, $data) {
	$out = $vals = array();

	$rstep = gps('step');
	if(smd_bio_table_exist()) {
		if ($rstep == 'author_edit') {
			extract(gpsa(array('user_id')));
			// Shame we have to double de-clutch here but we can't index on user_id unfortunately ('cos when
			// inserting new users, the bio functions run _BEFORE_ an auto_increment ID has been generated by TXP)
			$uname = safe_field('name','txp_users',"user_id = '$user_id'");
			$vals = safe_row('*', SMD_BIO, "user_ref='$uname'");
		}
		$widgets = safe_rows('*', SMD_BIO_META, '1=1 ORDER BY position');
		$tdac = ' class="noline"';
		$tdac_image = ' class="noline smd_bio_image_cell"';
		foreach ($widgets as $widget) {
			$val = ($vals && isset($vals[$widget['name']])) ? $vals[$widget['name']] : $widget['val'];
			$title = ($widget['title']) ? $widget['title'] : $widget['name'];
			$sizeopts = do_list($widget['size']);
			$size1 = ($sizeopts[0] > 0) ? $sizeopts[0] : '';
			$size2 = (isset($sizeopts[1]) && $sizeopts[1] > 0) ? $sizeopts[1] : '';
			$name = 'smd_bio_'.$widget['name'];
			switch($widget['type']) {
				case 'list':
					$selv = smd_bio_splitval($widget['val']);
					list($selv, $dflt) = smd_bio_get_default($selv, $val);
					$out[] = tr(fLabelCell($title).tda(selectInput($name, $selv, $dflt, false, '', $name), $tdac), ' class="smd_bio_select '.$name.'"');
					break;
				case 'radio':
					$selv = smd_bio_splitval($widget['val']);
					list($selv, $dflt) = smd_bio_get_default($selv, $val);
					$out[] = tr(fLabelCell($title).tda(radioSet($selv, $name, $dflt), $tdac), ' class="smd_bio_radio '.$name.'"');
					break;
				case 'yesnoradio':
					$out[] = tr(fLabelCell($title).tda(yesnoRadio($name, $val), $tdac), ' class="smd_bio_radio '.$name.'"');
					break;
				case 'checkbox':
					$selv = smd_bio_splitval($widget['val']);
					$val = ($vals && isset($vals[$widget['name']])) ? $vals[$widget['name']] : '';
					$checkedVals = do_list($val);
					$items = array();
					foreach ($selv as $idx => $lbl) {
						// Not using checkbox() because it doesn't support onclick
						$items[] = '<input type="checkbox" name="cb_'.$name.'" value="'.$idx.'"'.((in_array($idx, $checkedVals)) ? ' checked="checked"' : '') . ' class="checkbox" onclick="smd_bio_checkbox(\''.$name.'\');" />'.$lbl;
					}
					$out[] = tr(fLabelCell($title).tda(join('', $items), $tdac), ' class="smd_bio_checkbox '.$name.'"').fInput('hidden',$name,$val,'','','','','',$name);
					break;
				case 'textarea':
					// Not using text_area() because it forces inline styled width/height which should be in CSS
					$size1 = ($size1 == '' || $size1 == 0) ? 40 : $size1;
					$size2 = ($size2 == '' || $size2 == 0) ? 5 : $size2;
					$out[] = tr(fLabelCell($title).tda('<textarea id="'.$name.'" name="'.$name.'" class="smd_bio_textarea" cols="'.$size1.'" rows="'.$size2.'">'.htmlspecialchars($val).'</textarea>', $tdac), ' class="smd_bio_textarea '.$name.'"');
					break;
				case 'image':
					$parent = $widget['val'];
					$val = ($vals && isset($vals[$widget['name']])) ? $vals[$widget['name']] : '';
					$where = ($parent) ? "category='$parent'" : '1=1';
					$tree = safe_rows('*', 'txp_image', $where);
					$selv = array();
					foreach ($tree as $row) {
						$selv[$row['id']] = $row['name'];
					}
					$out[] = tr(fLabelCell($title).tda('<input type="text" value="'.htmlspecialchars($val).'" name="'.$name.'" size="4" class="smd_bio_image_id" />'.selectInput($name.'_list', $selv, $val, true, '').'<div class="smd_bio_image"></div><span class="smd_bio_image_data" title="'.(($size1) ? $size1 : '').','.(($size2) ? $size2 : $size1).'"></span>', $tdac_image. ' id="'.$name.'"'), ' class="smd_bio_image_row '.$name.'"');
					break;
				case 'datetime':
				case 'text_input':
					// Not using fInput() because it has no MAXLENGTH property
					$size1 = ($size1 == '' || $size1 == 0) ? 25 : $size1;
					$size2 = ($size2 == '' || $size2 == 0) ? $size1 : $size2;
					$out[] = tr(fLabelCell($title).tda('<input type="text" value="'.htmlspecialchars($val).'" name="'.$name.'" id="'.$name.'" size="'.$size1.'" maxlength="'.$size2.'" class="smd_bio_text edit" />', $tdac), ' class="smd_bio_text_input '.$name.'"');
					break;
			}
		}
	}
	return join('', $out);
}

// ------------------------
// Read a name/val array and remove any [*] marker which indicates a default item
function smd_bio_get_default($list, $curr) {
	$out = array();
	$dflt = $new_dflt = '';
	foreach ($list as $item => $value) {
		if (($pos = strpos($value, '[*]')) !== false) {
			$out[$item] = substr($value, 0, $pos);
			$new_dflt = $item;
		} else {
			$out[$item] = $value;
		}
		if ($item == $curr) {
			$dflt = $item;
		}
	}
	$dflt = ($dflt) ? $dflt : $new_dflt;
	return array($out, $dflt);
}

// ------------------------
// AJAX calls
function smd_bio_get_image() {
	global $img_dir;

	$id = gps('id');
	if ($id) {
		$rs = safe_row('*', 'txp_image', "id = '$id'");
		extract($rs);
		$out = array();
		$out['thumb'] = ($thumbnail) ? hu.$img_dir.'/'.$id.'t'.$ext : '';
		$out['image'] = hu.$img_dir.'/'.$id.$ext;
		$out['w'] = $w;
		$out['h'] = $h;
		$out['thw'] = ($thumb_w) ? $thumb_w : '';
		$out['thh'] = ($thumb_h) ? $thumb_h : '';
		send_xml_response($out);
	} else {
		send_xml_response();
	}
}

// ------------------------
// IMPORTANT: constants NOT used for table names
function smd_bio_get_ebio() {
	include_once txpath.'/publish/taghandlers.php';

	$id = gps('id');
	$core = array('user_ref');
	$rs = safe_row('*', 'smd_bio', "user_ref = '$id'");
	$meta = safe_rows('*', 'smd_bio_meta', "1=1");
//	$include = array_merge($core, array('mug', 'cell', 'department')); // TODO: get these from prefs/meta table
	$allowed_types = array('text_input', 'textarea', 'datetime');
	$out = array();
	foreach ($rs as $idx => $val) {
//		if (in_array($idx, $include)) {
			if (in_array($idx, $core)) {
				$out[$idx] = doSlash($val);
			} else {
				foreach($meta as $row) {
					if ($row['name'] == $idx) {
						if ($row['type'] == "image") {
							$out[$idx] = 'smd_image::'.thumbnail(array('id'=> $val));
						} else if (in_array($row['type'], $allowed_types)) {
							$out[$idx] = $row['title'].'::'.htmlspecialchars(strip_tags($val), ENT_QUOTES);
						}
						break;
					}
				}
			}
//		}
	}
	send_xml_response($out);
}

// ------------------------
function smd_bio_admin_js($evt, $stp) {
	global $event;

	if ($event != 'admin' && $event != 'smd_bio') {
		return false;
	}

	$css = safe_field('css', 'txp_css', "name='smd_bio'");
	if ($css) {
		$css = '<style type="text/css">'.n.base64_decode($css).n.'</style>';
	}
	$css .= <<<EOCSS
<style type="text/css">
#tooltip{
	position:absolute;
	border:1px solid #333;
	background:#f7f5d1;
	padding:2px 5px;
	color:#333;
	display:none;
}
</style>
EOCSS;
	echo <<<EOJS
<script type="text/javascript">
//<![CDATA[

	// Concatenate checkbox options for storage
	function smd_bio_checkbox(dest) {
		var out = [];
		jQuery(":checkbox").each(function() {
			var item = jQuery(this);
			if (item.attr('name').replace('cb_','') == dest) {
				if (item.attr('checked') == true) {
					out.push(item.val());
				}
			}
		});
		jQuery('#'+dest).val(out.join(','));
	}

jQuery(function() {
	// Grab images from the server when the select/textbox change
	jQuery(".smd_bio_image_id").blur(function() {
		id = jQuery(this).parent().attr('id');
		val = jQuery(this).val();
		smd_bio_get_image(id, val);
	}).blur();
	jQuery(".smd_bio_image_cell .list").change(function() {
		id = jQuery(this).parent().attr('id');
		val = jQuery(this).val();
		smd_bio_get_image(id, val);
	});
	function smd_bio_get_image(id, val) {
		jQuery("#" + id + " select option[value='"+val+"']").attr("selected", true);
		jQuery("#" + id + " input").val(val);
		var dims = jQuery("#" + id + " span.smd_bio_image_data").attr('title');
		var size = new Array();
		if (dims) {
			size = dims.split(",");
		}
		sendAsyncEvent({
				event: textpattern.event,
				step: 'smd_bio_get_image',
				id: val
			}, function(data) {
				data = jQuery(data);
				if (data) {
					var full = 0;
					var imgLink = data.find('thumb').attr('value');
					if (imgLink == '') {
						full = 1;
						var imgLink = data.find('image').attr('value');
					}
					if (size[0] == '') {
						if (full == 1) {
							size[0] = data.find('w').attr('value');
						} else {
							size[0] = data.find('thw').attr('value');
						}
					}
					if (size[1] == '') {
						if (full == 1) {
							size[1] = data.find('h').attr('value');
						} else {
							size[1] = data.find('thh').attr('value');
						}
					}
					jQuery("#" + id + " .smd_bio_image").fadeIn().html('<img src="'+imgLink+'" width="'+size[0]+'" height="'+size[1]+'" />');
				} else {
					jQuery("#" + id + " .smd_bio_image").fadeOut().empty();
				}
			}
		);
	}

	// Grab the extended info when hovering an author in the list
	jQuery("form table#list tr").each(function(e) {
		var tt = '';
		var row = jQuery(this);
		if (row.attr("title") == '') {
			var person = row.find("td:first").text();
			sendAsyncEvent({
					event: textpattern.event,
					step: 'smd_bio_get_ebio',
					id: person
				}, function(data) {
					data = jQuery(data);
						var entry = data.find('user_ref');
						out = '';
						entry.nextAll().each(function(item) {
							node = jQuery(this).context.nodeName;
							if (node != 'http-status') {
								vall = jQuery(this).attr('value');
								if (vall) {
									vsplit = vall.split('::');
									if (vsplit[0].indexOf('smd_image') < 0) {
										out += ((vsplit.length>1) ? vsplit[0] : node) + ': ';
									}
									vall = ((vsplit.length>1) ? vsplit[1] : vsplit[0]);
									out += vall + '<br/>';
								} else {
									out += node+': ';
								}
							}
						});
						row.attr("title", out);
					}
			);
		}

		xOffset = 30;
		yOffset = 25;
		hovItem = row.find("td:last").prev();
		hovItem.hover(function(e) {
			tt = jQuery(this).parent().attr("title");
			if (tt != '') {
				jQuery(this).parent().attr("title", "");
				jQuery("body").append("<p id='tooltip'>"+ tt +"</p>");
				jQuery("#tooltip")
					.css("top",(e.pageY - xOffset) + "px")
					.css("left",(e.pageX + yOffset) + "px")
					.fadeIn("fast");
			}
		},
		function() {
			jQuery(this).parent().attr("title", tt);
			jQuery("#tooltip").remove();
	    });
		hovItem.mousemove(function(e) {
			jQuery("#tooltip")
				.css("top",(e.pageY - xOffset) + "px")
				.css("left",(e.pageX + yOffset) + "px");
		});


	});

	// Grey out the Size box for those items that don't use it
	jQuery("#page-smd_bio .list[name='type']").change(function() {
		var theType = jQuery("#page-smd_bio .list[name='type'] option:selected").val();
		var dest = "#page-smd_bio input[name='size']";
		if (theType == 'list' || theType == 'radio' || theType == 'yesnoradio' || theType == 'checkbox') {
			jQuery(dest).attr("disabled", true);
			jQuery(dest).parent().prev().css("color", '#999');
		} else {
			jQuery(dest).attr("disabled", false);
			jQuery(dest).parent().prev().css("color", '');
		}
	}).change();

	// Pop up the help tooltips based on the current Type
	jQuery(".pophelp.smd_bio_size").hover(
		function(e) {
			var theType = jQuery("#page-smd_bio .list[name='type'] option:selected").val();
			spanid = 'span#smd_bio_size_help_'+theType;
			this.title = jQuery(spanid).attr("title");
		}, function(e) {
			this.title = '';
		}
	);
	jQuery(".pophelp.smd_bio_val").hover(
		function(e) {
			var theType = jQuery("#page-smd_bio .list[name='type'] option:selected").val();
			spanid = 'span#smd_bio_val_help_'+theType;
			this.title = jQuery(spanid).attr("title");
		}, function(e) {
			this.title = '';
		}
	);
});
//]]>
</script>
{$css}
EOJS;
		}

// ------------------------
// Make the name/val pairs for selectInput / radio / checkbox sets
function smd_bio_splitval($val) {
	$selv = array();

	$wvals = explode(',', $val);
	foreach ($wvals as $wval) {
		$prts = explode('=>', $wval);
		if (count($prts) == 1) {
			$prts[1] = $prts[0];
			$prts[0] = smd_bio_sanitize($prts[0]);
		}
		$selv[trim($prts[0])] = trim($prts[1]);
	}
	return $selv;
}

// ------------------------
// Super-sanitize the passed value so we can make variable names from the returned string
function smd_bio_sanitize($val) {
	return strtolower(str_replace("-", "_", sanitizeForUrl($val)));
}

// ------------------------
function smd_bio_save($evt, $stp) {
	global $prefs;

	if (smd_bio_table_exist()) {
		$targetvars = array();
		extract(doSlash(psa(array('privs', 'name', 'email', 'RealName', 'user_id'))));
		if (get_pref('smd_bio_sanitize_name', 0) > 0) {
			// Sanitize and pass the new name forward to the actual txp_user save routine
			$name = strtolower(sanitizeForUrl($name));
			$_POST['name'] = $name;
		}
		$length = function_exists('mb_strlen') ? mb_strlen($name, '8bit') : strlen($name);

		if (($user_id || $name) and $length <= 64 and is_valid_email($email)) {
			foreach ($_POST as $idx => $item) {
				if (strpos($idx, 'smd_bio_') === 0) {
					$targetvars[] = $idx;
				}
			}

			// Double de-clutch again... dammit :-(
			$user_id = gps('user_id');
			if ($user_id) {
				$user_ref = safe_field('name','txp_users',"user_id = '$user_id'");
			} else {
				$user_ref = $name;
			}

			extract(gpsa($targetvars));
			$bcols = getThings('describe `'.PFX.SMD_BIO.'`');
			$sqlSet = array();
			foreach ($targetvars as $var) {
				$colname = str_replace('smd_bio_', '', $var);
				if (in_array($colname, $bcols)) {
					$sqlSet[] = "`$colname` = '".doSlash($$var)."'";
				}
			}
			if ($sqlSet) {
				$rs = safe_upsert(SMD_BIO, join(',', $sqlSet), "`user_ref` = '$user_ref'");
			}
		}
	}
}

// ------------------------
function smd_bio_delete($evt, $stp) {
	global $txp_user;

	if (smd_bio_table_exist()) {
		// Since we are executing 'pre' delete we need to unfortunately duplicate some of the checks
		// from txp_admin.php so we minimise the opportunity to delete someone by mistake
		$selected = ps('selected');
		$method = ps('edit_method');
		if (!$selected or !is_array($selected)) {
			return;
		}
		if ($method != 'delete') {
			return;
		}

		$names = safe_column('name', 'txp_users', "name IN ('".join("','", doSlash($selected))."') AND name != '".doSlash($txp_user)."'");
		if (!$names) return;

		$assign_assets = ps('assign_assets');
		if ($assign_assets === '') {
			return;
		} elseif (in_array($assign_assets, $names)) {
			return;
		} else {
			// All the checks passed -- do it
			safe_delete(SMD_BIO, "user_ref IN ('".join("','", doSlash($names))."')");
		}
	}
}


// ************************
// BIO CONFIGURATION
// ------------------------
// Tab handler
function smd_bio($event, $step) {
	if(!$step or !in_array($step, array(
			'smd_bio_meta_add',
			'smd_bio_meta_del',
			'smd_bio_meta_save',
		))) {
		smd_bio_config('');
	} else $step();
}

// ------------------------
function smd_bio_config($message) {
	if (!smd_bio_table_exist()) {
		smd_bio_install('');
		exit;
	}

	pagetop(smd_bio_gTxt('admin_tab'), $message);

	echo smd_bio_meta_edit();
	echo smd_bio_meta_list();
}

// ------------------------
function smd_bio_meta_edit() {
	global $smd_bio_types;

	$vars = array('step', 'id', 'title', 'name', 'type', 'size', 'val', 'position');
	$rs = array();

	extract(gpsa($vars));
	if ($id && $step == 'meta_edit') {
		$id = assert_int($id);
		$rs = safe_row('*', SMD_BIO_META, "id = $id");
		extract($rs);
	}

	if ($step == 'smd_bio_meta_save' || $step == 'smd_bio_meta_add' || $step == 'smd_bio_meta_del') {
		foreach ($vars as $var) {
			$$var = '';
		}
	}

	$caption = smd_bio_gTxt(($step == 'meta_edit') ? 'meta_edit' : 'meta_add');

	// Make the name/val pairs for selectInput
	$selv = array();
	foreach ($smd_bio_types as $widx => $wval) {
		$selv[$widx] = $wval;
	}

	return form(
		hed($caption, 3,' style="text-align: center;"').

		startTable('edit', '', 'edit-pane').

		tr(
			fLabelCell('name').
			($id && $step == 'meta_edit' ? td(strong($name)) : fInputCell('name', $name))
		).

		tr(
			fLabelCell('title').
			fInputCell('title', $title)
		).

		tr(
			fLabelCell('type').
			td(selectInput('type', $selv, $type, false))
		).

		tr(
			fLabelCell(smd_bio_gTxt('size')).
			fInputCell('size', $size).td(tag(smd_bio_gTxt('help'), 'a', ' class="pophelp smd_bio_size"'))
		).

		tr(
			fLabelCell('value').
			td(text_area('val', '50', '128', $val)).td(tag(smd_bio_gTxt('help'), 'a', ' class="pophelp smd_bio_val"'))
		).

		tr(
			fLabelCell(smd_bio_gTxt('position')).
			fInputCell('position', $position)
		).

		tr(
			td().
			td(
				fInput('submit', '', gTxt('save'), 'publish')
			)
		).

		endTable().

		eInput('smd_bio').
		($id ? hInput('id', $id).hInput('name', $name).sInput('smd_bio_meta_save') : sInput('smd_bio_meta_add')).
		tag(' ', 'span', ' id="smd_bio_size_help_text_input" title="'.smd_bio_gTxt('sizehelp_text_input').'"').
		tag(' ', 'span', ' id="smd_bio_size_help_list" title="'.smd_bio_gTxt('help_unused').'"').
		tag(' ', 'span', ' id="smd_bio_size_help_radio" title="'.smd_bio_gTxt('help_unused').'"').
		tag(' ', 'span', ' id="smd_bio_size_help_yesnoradio" title="'.smd_bio_gTxt('help_unused').'"').
		tag(' ', 'span', ' id="smd_bio_size_help_checkbox" title="'.smd_bio_gTxt('help_unused').'"').
		tag(' ', 'span', ' id="smd_bio_size_help_textarea" title="'.smd_bio_gTxt('sizehelp_textarea').'"').
		tag(' ', 'span', ' id="smd_bio_size_help_image" title="'.smd_bio_gTxt('sizehelp_image').'"').
		tag(' ', 'span', ' id="smd_bio_size_help_datetime" title="'.smd_bio_gTxt('sizehelp_text_input').'"').

		tag(' ', 'span', ' id="smd_bio_val_help_text_input" title="'.smd_bio_gTxt('valhelp_text_input').'"').
		tag(' ', 'span', ' id="smd_bio_val_help_list" title="'.smd_bio_gTxt('valhelp_lrc').'"').
		tag(' ', 'span', ' id="smd_bio_val_help_radio" title="'.smd_bio_gTxt('valhelp_lrc').'"').
		tag(' ', 'span', ' id="smd_bio_val_help_yesnoradio" title="'.smd_bio_gTxt('valhelp_ynr').'"').
		tag(' ', 'span', ' id="smd_bio_val_help_checkbox" title="'.smd_bio_gTxt('valhelp_lrc').'"').
		tag(' ', 'span', ' id="smd_bio_val_help_textarea" title="'.smd_bio_gTxt('valhelp_text_input').'"').
		tag(' ', 'span', ' id="smd_bio_val_help_image" title="'.smd_bio_gTxt('valhelp_image').'"').
		tag(' ', 'span', ' id="smd_bio_val_help_datetime" title="'.smd_bio_gTxt('valhelp_text_input').'"')
	);
}

// ------------------------
function smd_bio_meta_list() {
	global $smd_bio_types;

	extract(gpsa(array('sort', 'dir', 'crit', 'search_method')));
	if ($sort === '') $sort = get_pref('smd_bio_meta_sort_column', 'name');
	if ($dir === '') $dir = get_pref('smd_bio_meta_sort_dir', 'asc');
	$dir = ($dir == 'desc') ? 'desc' : 'asc';

	if (!in_array($sort, array('name', 'title', 'type', 'size', 'val', 'position'))) $sort = 'position';

	$sort_sql   = $sort.' '.$dir;

	set_pref('smd_bio_meta_sort_column', $sort, 'smd_bio', 2, '', 0, PREF_PRIVATE);
	set_pref('smd_bio_meta_sort_dir', $dir, 'smd_bio', 2, '', 0, PREF_PRIVATE);

	$switch_dir = ($dir == 'desc') ? 'asc' : 'desc';

	$rs = safe_rows_start('*', SMD_BIO_META, '1 = 1 ORDER BY '.$sort_sql);

	if ($rs) {
		echo '<form action="index.php" method="post" name="longform" onsubmit="return verify(\''.gTxt('are_you_sure').'\')">'.

		startTable('list').
		tr(
			column_head('name', 'name', 'smd_bio', true, $switch_dir, '', '', ('name' == $sort) ? $dir : '').
			column_head('title', 'title', 'smd_bio', true, $switch_dir, '', '', ('title' == $sort) ? $dir : '').
			column_head('type', 'type', 'smd_bio', true, $switch_dir, '', '', ('type' == $sort) ? $dir : '').
			column_head(smd_bio_gTxt('size'), 'size', 'smd_bio', true, $switch_dir, '', '', ('size' == $sort) ? $dir : '').
			column_head('value', 'val', 'smd_bio', true, $switch_dir, '', '', ('val' == $sort) ? $dir : '').
			column_head(smd_bio_gTxt('position'), 'position', 'smd_bio', true, $switch_dir, '', '', ('position' == $sort) ? $dir : '').
			hCell().
			hCell()
		);

		while ($a = nextRow($rs)) {
			extract(doSpecial($a));

			echo tr(
				td($name).
				td($title).
				td($smd_bio_types[$type]).
				td($size).
				td($val,200).
				td($position).
				td(eLink('smd_bio', 'meta_edit', 'id', $id, gTxt('edit'))).
				td(dLink('smd_bio', 'smd_bio_meta_del', 'id', $id, 1, 'name', $name))
			);
		}

		echo endTable().'</form>';
	}
}

// ------------------------
function smd_bio_meta_make_list($val) {
	$wvals = do_list($val, '\r\n');
	if (count($wvals) == 1) {
		$wvals = do_list($val);
	}
	return join(', ', doArray($wvals, 'trim'));
}

// ------------------------
function smd_bio_meta_save() {
	extract(doSlash(psa(array('id', 'name', 'title', 'type', 'size', 'val', 'position'))));
	$id = assert_int($id);
	$val = smd_bio_meta_make_list($val);

	$rs = safe_update(SMD_BIO_META, "
		title = '$title',
		type = '$type',
		size = '$size',
		val = '$val',
		position = '$position'",
		"id = $id"
	);

	if ($rs) {
		smd_bio_config(
			smd_bio_gTxt('meta_updated', array('{name}' => $name))
		);
	}
}

// ------------------------
function smd_bio_meta_add() {
	extract(doSlash(psa(array('name', 'title', 'type', 'size', 'val', 'position'))));
	$name = smd_bio_sanitize($name);

	if (!empty($name) && smd_bio_meta_check($name)) {
		$size = (empty($size)) ? 25 : $size;
		//TODO: make the selection of column more intelligent based on the given type
		if ($type == 'textarea') {
			$asize = '4096'; //TODO: Find a way to user specify this
			$coltype = 'text';
		} else {
			$asize = '64'; //TODO: Find a way to user specify this
			$coltype = 'varchar';
		}
		$ret = safe_alter(SMD_BIO, "ADD `$name` $coltype($asize) NULL");
		$val = smd_bio_meta_make_list($val);

		if ($ret) {
			$rs = safe_insert(SMD_BIO_META, "
				name = '$name',
				title = '$title',
				type = '$type',
				size = '$size',
				val = '$val',
				position = '$position'
			");

			if ($rs) {
				smd_bio_config(smd_bio_gTxt('meta_added'));
				return;
			}
					}
	}

	smd_bio_config(array(smd_bio_gTxt('meta_not_added'), E_ERROR));
}

// ------------------------
function smd_bio_meta_del() {
	extract(gpsa(array('id','name')));

	$id = assert_int($id);
	$message = smd_bio_gTxt('meta_not_deleted');

	$exists = smd_bio_meta_check($name);
	$ret = @safe_alter(SMD_BIO, "DROP COLUMN `$name`");
	if ($ret || $exists) {
		$ret = safe_delete(SMD_BIO_META, "id='$id'");
		$message = smd_bio_gTxt('meta_deleted');
	}

	smd_bio_config($message);
}

// ------------------------
function smd_bio_meta_check($col) {
	$ucols = getThings('describe `'.PFX.'txp_users`');
	$bcols = getThings('describe `'.PFX.SMD_BIO.'`');
	$cols = array_merge($ucols, $bcols);
 	return (!in_array($col, $cols));
}


// ************************
// TABLE GENERATION
// ------------------------
function smd_bio_table_exist() {
	if (gps('debug')) {
		echo "++ TABLE ".SMD_BIO_META." HAS ".count(@safe_show('columns', SMD_BIO_META))." COLUMNS;";
	}
	return(@safe_show('columns', SMD_BIO_META));
}

// ------------------------
function smd_bio_install($message) {
	global $smd_bio_types;

	$version = mysql_get_server_info();
	$GLOBALS['txp_err_count'] = 0;
	if ($version < "4.1.2") {
		$GLOBALS['txp_err_count']++;
		trigger_error("smd_bio requires MySQL v4.1.2 or greater.");
	} else {
		$ret = '';
		$sql = array();
		$sql[] = "CREATE TABLE IF NOT EXISTS `".PFX.SMD_BIO."` (
			`user_ref` varchar(64) NOT NULL default '',
			UNIQUE KEY `user_ref` (`user_ref`)
		) ENGINE=MyISAM PACK_KEYS=1 ";

		$sql[] = "CREATE TABLE IF NOT EXISTS `".PFX.SMD_BIO_META."` (
			`id` int(4) NOT NULL auto_increment,
			`title` varchar(64) NULL default '',
			`name` varchar(64) NOT NULL default '',
			`type` set(".doQuote(join("','", array_keys($smd_bio_types))).") NOT NULL default 'text_input',
			`size` varchar(10) NULL default 0,
			`val` text NULL default '',
			`position` tinyint(3) NULL default 0,
			PRIMARY KEY (`id`),
			UNIQUE KEY (`name`)
		) ENGINE=MyISAM AUTO_INCREMENT=1";

		if(gps('debug')) {
			dmp($sql);
		}
		foreach ($sql as $qry) {
			$ret = safe_query($qry);
			if ($ret===false) {
				$GLOBALS['txp_err_count']++;
				echo "<b>".$GLOBALS['txp_err_count'].".</b> ".mysql_error()."<br />\n";
				echo "<!--\n $qry \n-->\n";
			}
		}
	}

	if ($GLOBALS['txp_err_count'] == 0) {
		$message = smd_bio_gTxt('tbl_installed');
		smd_bio_config($message);
	} else {
		$message = smd_bio_gTxt('tbl_not_installed');
		smd_bio_config($message);
	}
}

// ************************
// CLIENT-SIDE TAGS
// ------------------------
function smd_bio_info($atts, $thing=NULL) {
	global $thisarticle;

	extract(lAtts(array(
		'author' => '',
		'items' => 'SMD_ALL',
		'exclude' => '',
		'form' => '',
		'wraptag' => '',
		'break' => '',
		'class' => '',
		'label' => '1',
		'labeltag' => '',
		'labelclass' => 'SMD_DFLT',
		'itemwraptag' => '',
		'itemclass' => 'SMD_DFLT',
		'debug' => '0',
	), $atts));

	$author = ($author) ? $author : (isset($thisarticle) ? $thisarticle['authorid'] : '');
	$author = do_list($author);
	$authors = array();
	$thing = (empty($form)) ? $thing : fetch_form($form);

	// Expand any priv levels
	foreach ($author as $user) {
		if (strpos(strtolower($user), "smd_privs") === 0) {
			$aprivs = explode(':', $user);
			array_shift($aprivs); // Remove smd_privs token from the array
			$authors = array_merge($authors, safe_column('name', 'txp_users', 'privs in (' . doQuote(join("','", $aprivs)) . ')'));
		} else {
			$authors[] = $user;
		}
	}

	$items = do_list($items);

	$exclude = do_list($exclude);
	$final = '';

	// The indices are the gTxt() names for the associated item
	$coreCols = array('id' => 'user_id', 'name' => 'name', 'real_name' => 'RealName', 'email' => 'email', 'privileges' => 'privs', 'date' => 'last_access');

	if ($authors) {
		$meta = safe_rows('*', SMD_BIO_META, '1=1');
		$cmeta = safe_show('columns', 'txp_users');
		$num = count($meta);
		$list_types = array('checkbox', 'radio', 'list');

		foreach($cmeta as $info) {
			if (!in_array($info['Field'], $coreCols)) continue;
			$meta[$num]['name'] = $info['Field'];
			$tField = join('', array_keys($coreCols, $info['Field']));
			$meta[$num]['title'] = (gTxt($tField) == $tField) ? smd_bio_gTxt($tField) : gTxt($tField);
			$length = (($off = strpos($info['Type'], '(')) !== false) ? $off : strlen($info['Type']); // Find the first open bracket or end of string
			$meta[$num]['type'] = substr($info['Type'], 0, $length);
			$num++;
		}
		if ($debug > 1) {
			echo '++ META DATA ++';
			dmp($meta);
		}

		// Exclusions override given items
		if ($exclude[0] != '' || in_array('SMD_ALL', $items)) {
			$items = safe_column('name', SMD_BIO_META, '1=1');
			$items = array_merge($items, $coreCols);
		}

		foreach ($authors as $user) {
			$cbio = safe_row('*', 'txp_users', "name='$user'");
			$ebio = safe_row('*', SMD_BIO, "user_ref='$user'");
			$idx = -1;
			$out = array();
			$replacements = array();

			foreach ($items as $iref => $whatnot) {
				if (in_array($whatnot, $exclude)) continue;

				// Find the meta row
				foreach ($meta as $num => $data) {
					if ($data['name'] == $whatnot) {
						$idx = $num;
						break;
					}
				}
				if ($idx > -1) {
					if (in_array($whatnot, $coreCols)) {
						$row = isset($cbio[$whatnot]) ? $cbio[$whatnot] : '';
					} else {
						$row = isset($ebio[$whatnot]) ? $ebio[$whatnot] : '';
					}

					if ($row) {
						if (in_array($meta[$idx]['type'], $list_types)) {
							$row = do_list($row);
							$row = join(', ',$row);
						}
						$theClass = ($itemclass=='SMD_DFLT') ? ' smd_bio_'.$meta[$idx]['name'] : (($itemclass) ? $itemclass : '');
						$labClass = ($labelclass=='SMD_DFLT') ? ' smd_bio_'.$meta[$idx]['name'] : (($labelclass) ? $labelclass : '');
						$theTitle = $meta[$idx]['title'];
						$theName = $meta[$idx]['name'];
						$replacements['{smd_bio_info_item}'] = $row;
						if (in_array($meta[$idx]['type'], $list_types)) {
							$chosens = do_list($row);
							$nv = smd_bio_splitval($meta[$idx]['val']);
							list($nv, $dflt) = smd_bio_get_default($nv, $row);
							$listctr=1;
							$chosenctr=0;
							foreach($nv as $listitem => $listlabel) {
								$replacements['{smd_bio_'.$theName.'_item_'.$listctr.'}'] = $listitem;
								$replacements['{smd_bio_'.$theName.'_label_'.$listctr.'}'] = $listlabel;
								if (in_array($listitem, $chosens)) {
									$chosenctr++;
									$replacements['{smd_bio_'.$theName.'_chosen_'.$chosenctr.'}'] = $listitem;
									$replacements['{smd_bio_'.$theName.'_chosen_label_'.$chosenctr.'}'] = $listlabel;
								}
								$listctr++;
							}
							$replacements['{smd_bio_'.$theName.'_count}'] = $listctr-1;
							$replacements['{smd_bio_'.$theName.'_chosen_count}'] = $chosenctr;
						}
						$replacements['{smd_bio_info_name}'] = $theName;
						$replacements['{smd_bio_info_title}'] = $theTitle;
						$replacements['{smd_bio_info_itemclass}'] = $theClass;
						$replacements['{smd_bio_info_labelclass}'] = $labClass;
						$replacements['{smd_bio_'.$theName.'}'] = $row;
						if ($debug) {
							echo '++ REPLACEMENTS ++';
							dmp($replacements);
						}
						$toParse = (!empty($thing)) ? $thing : (tag((($label==1) ? $theTitle : (($label=='') ? '' : (($label) ? $label : $theName))), (($labeltag)?$labeltag:'br/'), (($labelclass)? ' class="'.$labClass.'"' : '')).(($itemwraptag) ? doTag($row, $itemwraptag, $theClass): $row));

						$out[] = parse(strtr($toParse, $replacements));
					}
				}
			}

			$final .= ($wraptag) ? doWrap($out, $wraptag, $break, $class) : join('', $out);
		}
	}
	return $final;
}

// ------------------------
// A wrapper to article_custom that auto sets the user to the one specified
// or the current article's author.
// NOTE: lAtts() is NOT used because that limits the plugin attributes.
function smd_bio_articles($atts, $thing=NULL) {
	global $thisarticle;

	$author = (isset($atts['author'])) ? $atts['author'] : (isset($thisarticle) ? $thisarticle['authorid'] : '');
	$atts['author'] = $author;
	return parseArticles($atts, '1', $thing);
}

// ------------------------
// Plugin-specific replacement strings - localise as required
function smd_bio_gTxt($what, $atts = array()) {
	$lang = array(
		'admin_tab' => 'Bio Config',
		'help' => 'Tip',
		'help_unused' => 'Unused for this Type',
		'id' => 'ID',
		'name' => 'Name',
		'meta_add' => 'Add bio item',
		'meta_added' => 'Bio item added',
		'meta_not_added' => 'Problem adding bio item: check name is not already used',
		'meta_deleted' => 'Bio item and all its data deleted',
		'meta_not_deleted' => 'Problem deleting bio item: it may still exist',
		'meta_edit' => 'Edit bio item',
		'meta_updated' => 'Bio item "{name}" updated',
		'position' => 'Position',
		'privileges' => 'Privileges',
		'real_name' => 'Full name',
		'size' => 'Size',
		'sizehelp_text_input' => 'Up to two values specifying the number of characters: 1) of the input box on the Admin->Users tab, 2) the user is allowed to enter',
		'sizehelp_textarea' => 'Up to two values specifying the dimensions of the textarea in characters: 1) Width, 2) Height',
		'sizehelp_image' => 'The x, y dimensions of the image/thumbnail on the Admin->Users tab. If only one value is given, the image will be square. If either value is omitted, the dimensions stored in the database will be used instead',
		'valhelp_text_input' => 'The default value that will appear in the text box',
		'valhelp_lrc' => 'Comma- or newline-separated list of available options in the set. If you list only item labels, the names will be automatically assigned (lower case, no spaces). You may specify your own names using: name1 => Label 1, name2 -> Label 2, ...',
		'valhelp_ynr' => 'Default value of the Yes/No checkbox. 0 (or omitted) = No; 1 = Yes',
		'valhelp_image' => 'Limit the images in the dropdown to the ones in this given parent image category. If omitted, all images are available',
		'tbl_installed' => 'Tables installed.',
		'tbl_not_installed' => 'Tables NOT installed.',
		'title' => 'Title',
		'type' => 'Type',
		'value' => 'Value',
	);
	return strtr($lang[$what], $atts);
}";s:8:"code_md5";s:32:"8e1ab186f6c0844afe85ea71ebe58c69";s:4:"type";s:1:"1";}